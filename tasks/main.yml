---
# tasks file for npm-packages
- name: Set homebrew path for Intel Mac
  set_fact:
    homebrew_path: /usr/local/

- name: Set homebrew path for M1 Mac
  set_fact:
    homebrew_path: /opt/homebrew/
  when: ansible_architecture == "arm64"

- name: Ensure System Packages are installed
  package:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
  loop: "{{ system_packages_dev }}"
  loop_control:
    label: "{{ item.name | default(item) }}"
  when: ansible_system == "Linux"

- name: Ensure Homebrew Packages are installed
  homebrew:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('latest') }}"
  loop: "{{ homebrew_packages_dev }}"
  loop_control:
    label: "{{ item.name | default(item) }}"
  when: ansible_pkg_mgr == "homebrew"

- name: Ensure Homebrew taps are installed
  homebrew_tap:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
  loop: "{{ homebrew_taps_dev }}"
  loop_control:
    label: "{{ item.name | default(item) }}"
  when: ansible_pkg_mgr == "homebrew"

- name: Ensure Homebrew Cask Packages are installed
  homebrew_cask:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('upgraded') }}"
    greedy: "{{ item.greedy | default(true) }}"
    install_options: "no-quarantine"
    sudo_password: "{{ ansible_become_password }}"
  loop: "{{ homebrew_cask_packages_dev }}"
  loop_control:
    label: "{{ item.name | default(item) }}"
  when: ansible_pkg_mgr == "homebrew"

- name: Install & Rescue pip_packages_dev
  when: pip_packages_dev
  block:
    - name: Ensure pip3 packaging is installed
      pip:
        name: packaging
        state: latest

  rescue:
    - name: Get python path of python3
      command:
        cmd: "ls -lah {{ homebrew_path }}/bin/python3"
      register: python_path

    - name: Set python3 path
      set_fact:
        python_env_path: "{{ python_path.stdout | regex_search('(Cellar/python@.*\/[0-9.]{1,}\/)') }}"

    - name: Ensure python path in linked correctly
      command:
        cmd: "{{ homebrew_path }}{{ python_bin_path }}python3 -m venv {{ homebrew_path }}{{ python_env_path }}"

    - name: Source bin/activate
      shell: "source {{ homebrew_path }}{{ python_env_path }}bin/activate"

    - name: Upgrade pip3
      command:
        cmd: "{{ homebrew_path }}{{ python_bin_path }}pip3 install --upgrade pip"

    - name: Set ansible_python_interpreter path
      set_fact:
        ansible_python_interpreter: "{{ homebrew_path }}{{ python_bin_path }}/python3"

  always:
    - name: Ensure pip(3) Packages are installed
      pip:
        name: "{{ item.name | default(item) }}"
        state: "{{ item.state | default('latest') }}"
        version: "{{ item.version | default(omit) }}"
      environment:
        PATH: "{{ homebrew_path }}{{ python_bin_path }}:{{ ansible_env.PATH }}"
      loop: "{{ pip_packages_dev }}"
      loop_control:
        label: "{{ item.name | default(item) }}"
      tags: python

- name: Ensure NPM Packages are installed
  npm:
    global: true
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('latest') }}"
  environment:
    PATH: "{{ homebrew_path }}{{ node_path }}:{{ ansible_env.PATH }}"
  loop: "{{ npm_packages_dev }}"
  loop_control:
    label: "{{ item.name | default(item) }}"
